{"ast":null,"code":"import _classCallCheck from \"C:/Users/pp4218/OneDrive - Snap-on/Desktop/learning/Angular/routing-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pp4218/OneDrive - Snap-on/Desktop/learning/Angular/routing-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ActivatedRoute } from '@angular/router';\nimport { ServersService } from '../servers.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport var EditServerComponent = /*#__PURE__*/(function () {\n  var EditServerComponent = /*#__PURE__*/function () {\n    function EditServerComponent(serversService, route) {\n      _classCallCheck(this, EditServerComponent);\n\n      this.serversService = serversService;\n      this.route = route;\n      this.serverName = '';\n      this.serverStatus = '';\n      this.allowEdit = false;\n    }\n\n    _createClass(EditServerComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        /// approach OK doar daca nu se face update la params dupa ce comp. a fost initializat\n        console.log(this.route.snapshot.queryParams);\n        console.log(this.route.snapshot.fragment); ///\n\n        this.route.queryParams.subscribe(function (queryParams) {\n          _this.allowEdit = queryParams.allowEdit === '1' ? true : false;\n          console.log(_this.allowEdit);\n        }); /// approach cu Observable (queryParams) - pentru componentele a caror params se pot updata si dupa ce comp. a fost initializat\n        //  const params = this.route.queryParams.subscribe();\n        //  const fragments = this.route.fragment.subscribe();\n        ///\n        // pe ngOnDestroy - optional\n        //  params.unsubscribe();\n        //  fragments.unsubscribe();\n\n        this.server = this.serversService.getServer(1);\n        this.serverName = this.server.name;\n        this.serverStatus = this.server.status;\n      }\n    }, {\n      key: \"onUpdateServer\",\n      value: function onUpdateServer() {\n        this.serversService.updateServer(this.server.id, {\n          name: this.serverName,\n          status: this.serverStatus\n        });\n      }\n    }]);\n\n    return EditServerComponent;\n  }();\n\n  EditServerComponent.ɵfac = function EditServerComponent_Factory(t) {\n    return new (t || EditServerComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  EditServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditServerComponent,\n    selectors: [[\"app-edit-server\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditServerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Editing not allowed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"div\", 0)(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Server Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.server.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Server Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.serverStatus = $event;\n        });\n        i0.ɵɵelementStart(11, \"option\", 5);\n        i0.ɵɵtext(12, \"Online\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 6);\n        i0.ɵɵtext(14, \"Offline\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function EditServerComponent_Template_button_click_15_listener() {\n          return ctx.onUpdateServer();\n        });\n        i0.ɵɵtext(16, \" Update Server \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.server.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.serverStatus);\n      }\n    },\n    dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel]\n  });\n  return EditServerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}