{"ast":null,"code":"import _createClass from \"C:/Users/pp4218/OneDrive - Snap-on/Desktop/learning/Angular/routing-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/pp4218/OneDrive - Snap-on/Desktop/learning/Angular/routing-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { EditServerComponent } from './servers/edit-server/edit-server.component';\nimport { ServerComponent } from './servers/server/server.component';\nimport { ServersComponent } from './servers/servers.component';\nimport { UserComponent } from './users/user/user.component';\nimport { UsersComponent } from './users/users.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth-guard.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar appRoutes = [// <router-outlet></router-outlet> citeste doar primul nivel de paths-uri, nu si children ///\n// solutie - > <router-outlet></router-outlet> in servers.component.html ///\n{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'users',\n  component: UsersComponent,\n  children: [{\n    path: ':id/:name',\n    component: UserComponent\n  }]\n}, // Passing argumments to routes, accesul parametrului in componentul tinta ///\n{\n  path: 'servers',\n  canActivate: [AuthGuard],\n  component: ServersComponent,\n  children: [{\n    path: ':id',\n    component: ServerComponent\n  }, {\n    path: ':id/edit',\n    component: EditServerComponent\n  }]\n}, // catch every path that can't be found\n// make sure is the last path declared (parsed top -> bottom)\n{\n  path: 'not-found',\n  component: PageNotFoundComponent\n}, {\n  path: '**',\n  redirectTo: '/not-found'\n}];\nexport var AppRoutingModule = /*#__PURE__*/(function () {\n  var AppRoutingModule = /*#__PURE__*/_createClass(function AppRoutingModule() {\n    _classCallCheck(this, AppRoutingModule);\n  });\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(appRoutes), RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}